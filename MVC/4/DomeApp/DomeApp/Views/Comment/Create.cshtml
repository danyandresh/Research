@model DomeApp.Models.Comment

@{
    ViewBag.Title = "Create comment";
}

<fieldset>

    @if (!Request.IsAuthenticated)
    {
        <div class="panel">
        </div>

        <div class="pull-right">
            @Html.ActionLink("Log in to post a comment", "Login", "Account", routeValues: new { returnUrl = Request.Url }, htmlAttributes: new { id = "loginLink", @class = "btn btn-primary active pull-right" })
        </div>
    }
    else
    {

        var returnQueryString = HttpUtility.ParseQueryString(Request.QueryString.ToString());
        returnQueryString["toMostRecent"] = "true";

        using (Html.BeginForm("Create", "Comment", new { ReturnUrl = Request.Url.LocalPath + "?" + returnQueryString.ToString() }, FormMethod.Post, null))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="panel-title">
                        <span>New comment</span>
                    </div>

                    @Html.TextAreaFor(model => model.Content, new { @class = "form-control", rows = 5 })
                    @Html.ValidationMessageFor(model => model.Content)
                </div>
            </div>

            <div class="pull-right">
                <input type="submit" value="Post" class="btn btn-primary active pull-right" />
            </div>
        }
    }
</fieldset>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
