<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:LightPlayer="clr-namespace:LightPlayer" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:converters="clr-namespace:LightPlayer.Converters">
    
    <converters:TimeConverterFromSeconds x:Key="TimeConverterFromSeconds"/>
    <System:Double x:Key="FontSize">15</System:Double>

    <Color x:Key="ButtonBackgroundActive">#FFDFFFFD</Color>
    <Color x:Key="ButtonForegroundActive">#FF006C66</Color>
    <Color x:Key="ButtonBackgroundHover">#FF8CCFCC</Color>
    <Color x:Key="ButtonForegroundHover">#FF00504C</Color>
    <Color x:Key="ButtonBackgroundPressed">#FF3CF3EA</Color>
    <Color x:Key="ButtonForegroundPressed">#FF004C49</Color>
    <Color x:Key="ButtonBackgroundInactive">#19D2FFFD</Color>
    <Color x:Key="ButtonForegroundInactive">#FF004C49</Color>

    <SolidColorBrush x:Key="ButtonBackgroundActiveBrush" Color="{StaticResource ButtonBackgroundActive}"/>
    <SolidColorBrush x:Key="ButtonForegroundActiveBrush" Color="{StaticResource ButtonForegroundActive}"/>
    <SolidColorBrush x:Key="ButtonBackgroundHoverBrush" Color="{StaticResource ButtonBackgroundHover}"/>
    <SolidColorBrush x:Key="ButtonForegroundHoverBrush" Color="{StaticResource ButtonForegroundHover}"/>
    <SolidColorBrush x:Key="ButtonBackgroundPressedBrush" Color="{StaticResource ButtonBackgroundPressed}"/>
    <SolidColorBrush x:Key="ButtonForegroundPressedBrush" Color="{StaticResource ButtonForegroundPressed}"/>
    <SolidColorBrush x:Key="ButtonBackgroundInactiveBrush" Color="{StaticResource ButtonBackgroundInactive}"/>
    <SolidColorBrush x:Key="ButtonForegroundInactiveBrush" Color="{StaticResource ButtonForegroundInactive}"/>


    <Thickness x:Key="ButtonMargin">5</Thickness>
    <Thickness x:Key="ButtonShapeMargin">5,5,5,5</Thickness>

    <Style x:Key="ButtonShapeStyle" TargetType="{x:Type Path}">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="{StaticResource ButtonShapeMargin}"/>
        <Setter Property="Fill" Value="{StaticResource ButtonForegroundActiveBrush}"/>
    </Style>
    <Style x:Name="hyperlinks" TargetType="{x:Type Hyperlink}" >
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundActiveBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundActiveBrush}" />
        <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundHoverBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundHoverBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundActiveBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundActiveBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonContentStyle" TargetType="{x:Type ContentPresenter}">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="{StaticResource ButtonShapeMargin}"/>
    </Style>

    <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
        <Border CornerRadius="4" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}">
            <Grid>
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Margin}"/>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundHoverBrush}" />
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundHoverBrush}" />
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundPressedBrush}" />
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundPressedBrush}" />

            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MediaButtonTemplate" TargetType="{x:Type LightPlayer:MediaButton}">
        <Border CornerRadius="4" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}">
            <Grid>
                <Path x:Name="PathIcon" Style="{StaticResource ButtonShapeStyle}" Data="{Binding Shape, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundHoverBrush}" />
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundHoverBrush}" />
                <Setter TargetName="PathIcon" Property="Fill" Value="{StaticResource ButtonForegroundHoverBrush}" />
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundPressedBrush}" />
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundPressedBrush}" />
                <Setter TargetName="PathIcon" Property="Fill" Value="{StaticResource ButtonForegroundHoverBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="{StaticResource ButtonMargin}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundActiveBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundActiveBrush}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="BorderThickness" Value="{StaticResource ButtonShapeMargin}"/>
        <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
    </Style>

    <Style x:Key="ButtonPlay" TargetType="{x:Type LightPlayer:MediaButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Shape" Value="M0,0 L0,2 L1,1 L0,0" />
        <Setter Property="Template" Value="{StaticResource MediaButtonTemplate}"/>
    </Style>
    <Style x:Key="ButtonPause" TargetType="{x:Type LightPlayer:MediaButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Shape" Value="M0,0 L0,2 L1,2 L1,0 M2,0 L2,2 L3,2 L3,0" />
        <Setter Property="Template" Value="{StaticResource MediaButtonTemplate}"/>
    </Style>
    <Style x:Key="ButtonStop" TargetType="{x:Type LightPlayer:MediaButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Shape" Value="M0,0 L0,2 L1,2 L1,0" />
        <Setter Property="Template" Value="{StaticResource MediaButtonTemplate}"/>
    </Style>
    <Style x:Key="ItemsPresenterStyle" TargetType="{x:Type ItemsPresenter}">
        <Setter Property="Margin" Value="{StaticResource ButtonMargin}"/>
    </Style>
    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundActiveBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundActiveBrush}"/>
        <Setter Property="Template" Value="{DynamicResource ListBoxItemControlTemplate}"/>
    </Style>
    <Style x:Key="ListViewStyle" TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundActiveBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundActiveBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource ButtonShapeMargin}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="{StaticResource ButtonMargin}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Themes:ClassicBorderDecorator x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{StaticResource ItemsPresenterStyle}"/>
                        </ScrollViewer>
                    </Themes:ClassicBorderDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ButtonBackgroundInactiveBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ButtonBackgroundActiveBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ListBoxItemControlTemplate" TargetType="{x:Type ListBoxItem}">
        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ButtonBackgroundPressedBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundPressedBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ButtonBackgroundPressedBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundPressedBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ButtonBackgroundInactiveBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundInactiveBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ButtonBackgroundHoverBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundHoverBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundActiveBrush}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundActiveBrush}"/>
    </Style>
    <Style x:Key="HorizontalThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{StaticResource ThumbStyle}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundActiveBrush}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundActiveBrush}"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="10"/>
    </Style>
    <Style x:Key="HorizontalSliderUpThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{StaticResource HorizontalThumbStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Path Data="M 11 21 L 0 21 L 0 6 L 5 1 L 6 1 L 11 6 z" Fill="{TemplateBinding Foreground}"/>
                        <Path Data="M 0.5 20 L 0.5 5.5 L 5 0.5 L 5.5 0.5" Stroke="{TemplateBinding Background}" StrokeThickness="1.0"/>
                        <Path Data="M 5.5 0.5 L 6 0.5 L 10.5 5.5 L 10.5 20.5 L 0 20.5" Stroke="{TemplateBinding Background}" StrokeThickness="1.0"/>
                        <Path Data="M 1.5 19 L 1.5 5.5 L 5 1.5 L 5.5 1.5" Stroke="{TemplateBinding Background}" StrokeThickness="1.0"/>
                        <Path Data="M 5.5 1.5 L 6 1.5 L 9.5 5.5 L 9.5 19.5 L 1.0 19.5" Stroke="{TemplateBinding Background}" StrokeThickness="1.0"/>
                        <Path Data="M 9 19 L 2 19 L 2 6 L 5.5 2 L 9 6 z" Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundInactiveBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalSliderDownThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{StaticResource HorizontalThumbStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Path Data="M 11 0 L 0 0 L 0 15 L 5 21 L 6 21 L 11 15 z" Fill="{TemplateBinding Foreground}"/>
                        <Path Data="M 10 0.5 L 0.5 0.5 L 0.5 15.5 L 5 20.5 L 5.5 20.5" Stroke="{TemplateBinding Background}" StrokeThickness="1.0"/>
                        <Path Data="M 5.5 20.5 L 6 20.5 L 10.5 15.5 L 10.5 0" Stroke="{TemplateBinding Background}" StrokeThickness="1.0"/>
                        <Path Data="M 9 1.5 L 1.5 1.5 L 1.5 15.5 L 5 19.5 L 5.5 19.5" Stroke="{TemplateBinding Background}" StrokeThickness="1.0"/>
                        <Path Data="M 5.5 19.5 L 6 19.5 L 9.5 15.5 L 9.5 1" Stroke="{TemplateBinding Background}" StrokeThickness="1.0"/>
                        <Path Data="M 9 2 L 2 2 L 2 15 L 5.5 19 L 9 15 z" Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundInactiveBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundActiveBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{StaticResource HorizontalThumbStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Themes:ClassicBorderDecorator BorderBrush="{TemplateBinding Foreground}" BorderThickness="3" BorderStyle="Raised" Background="{TemplateBinding Background}">
                        <Rectangle x:Name="ForegroundRect" Fill="{TemplateBinding Foreground}" Margin="-1" Opacity="0.5"/>
                    </Themes:ClassicBorderDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundInactiveBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{StaticResource HorizontalThumbStyle}">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="10"/>
    </Style>
    <Style x:Key="VerticalSliderLeftThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{StaticResource VerticalThumbStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Path Data="M 21 11 L 21 0 L 6 0 L 0 5 L 0 6 L 6 11 z" Fill="{TemplateBinding Foreground}"/>
                        <Path Data="M 20 0.5 L 5.5 0.5 L 0.5 5 L 0.5 5.5 " Stroke="{TemplateBinding Background}" StrokeThickness="1.0"/>
                        <Path Data="M 0.5 5.5 L 0.5 6 L 5.5 10.5 L 20.5 10.5 L 20.5 0 " Stroke="{TemplateBinding Background}" StrokeThickness="1.0"/>
                        <Path Data="M 19 1.5 L 5.5 1.5 L 1.5 5 L 1.5 5.5 " Stroke="{TemplateBinding Background}" StrokeThickness="1.0"/>
                        <Path Data="M 1.5 5.5 L 1.5 6 L 5.5 9.5 L 19.5 9.5 L 19.5 1.0 " Stroke="{TemplateBinding Background}" StrokeThickness="1.0"/>
                        <Path Data="M 19 9 L 19 2 L 6 2 L 2 5.5 L 6 9 z" Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundInactiveBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalSliderRightThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{StaticResource VerticalThumbStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Path Data="M 0 11 L 0 0 L 15 0 L 21 5 L 21 6 L 15 11 z" Fill="{TemplateBinding Foreground}"/>
                        <Path Data="M 0.5 10 L 0.5 0.5 L 15.5 0.5 L 20.5 5 L 20.5 5.5 " Stroke="{TemplateBinding Background}" StrokeThickness="1.0"/>
                        <Path Data="M 20.5 5.5 L 20.5 6 L 15.5 10.5 L 0 10.5 " Stroke="{TemplateBinding Background}" StrokeThickness="1.0"/>
                        <Path Data="M 1.5 9 L 1.5 1.5 L 15.5 1.5 L 19.5 5 L 19.5 5.5 " Stroke="{TemplateBinding Background}" StrokeThickness="1.0"/>
                        <Path Data="M 19.5 5.5 L 19.5 6 L 15.5 9.5 L 1 9.5 " Stroke="{TemplateBinding Background}" StrokeThickness="1.0"/>
                        <Path Data="M 2 9 L 2 2 L 15 2 L 19 5.5 L 15 9 " Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundInactiveBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalSliderThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{StaticResource VerticalThumbStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Themes:ClassicBorderDecorator BorderBrush="{TemplateBinding Background}" BorderThickness="3" BorderStyle="Raised" Background="{TemplateBinding Background}">
                        <Rectangle Fill="{TemplateBinding Foreground}" Margin="-1" Opacity="0.5"/>
                    </Themes:ClassicBorderDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundInactiveBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundActiveBrush}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundActiveBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Width="{TemplateBinding Width}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Visibility="Collapsed"/>
                            <Themes:ClassicBorderDecorator x:Name="TrackBackground" BorderBrush="{TemplateBinding Foreground}" BorderThickness="2" BorderStyle="Sunken" Height="4" Margin="0,0,0,1" Grid.Row="1">
                                <Canvas Margin="-2">
                                    <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Foreground}" Height="4.0" Visibility="Hidden"/>
                                </Canvas>
                            </Themes:ClassicBorderDecorator>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource HorizontalSliderThumbStyle}">

                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                            <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2"/>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource HorizontalSliderUpThumbStyle}"/>
                            <Setter Property="Margin" TargetName="TrackBackground" Value="0,3,0,0"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource HorizontalSliderDownThumbStyle}"/>
                            <Setter Property="Margin" TargetName="TrackBackground" Value="0,0,0,3"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <TickBar x:Name="LeftTick" Fill="{TemplateBinding Foreground}" Placement="Left" Visibility="Collapsed" Width="4"/>
                                    <Themes:ClassicBorderDecorator x:Name="TrackBackground" BorderBrush="{TemplateBinding Foreground}" BorderThickness="2" BorderStyle="Sunken" Grid.Column="1" Margin="0,0,1,0" Width="4">
                                        <Canvas Margin="-2">
                                            <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Foreground}" Visibility="Hidden" Width="4.0"/>
                                        </Canvas>
                                    </Themes:ClassicBorderDecorator>
                                    <Track x:Name="PART_Track" Grid.Column="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb" Style="{StaticResource VerticalSliderThumbStyle}"/>
                                        </Track.Thumb>
                                    </Track>
                                    <TickBar x:Name="RightTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Placement="Right" Grid.RowSpan="3" Visibility="Collapsed" Width="4"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement" Value="TopLeft">
                                    <Setter Property="Visibility" TargetName="LeftTick" Value="Visible"/>
                                    <Setter Property="Style" TargetName="Thumb" Value="{StaticResource VerticalSliderLeftThumbStyle}"/>
                                    <Setter Property="Margin" TargetName="TrackBackground" Value="3,0,0,0"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="BottomRight">
                                    <Setter Property="Visibility" TargetName="RightTick" Value="Visible"/>
                                    <Setter Property="Style" TargetName="Thumb" Value="{StaticResource VerticalSliderRightThumbStyle}"/>
                                    <Setter Property="Margin" TargetName="TrackBackground" Value="0,0,3,0"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="Both">
                                    <Setter Property="Visibility" TargetName="LeftTick" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="RightTick" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="{StaticResource FontSize}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundActiveBrush}"/>
    </Style>
    <Style TargetType="{x:Type ToolTip}">
        <Style.Resources>
            <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
                <Style.BasedOn>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="TextWrapping" Value="Wrap"/>
                    </Style>
                </Style.BasedOn>
            </Style>
        </Style.Resources>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundInactiveBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBackgroundInactiveBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundInactiveBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border Margin="{TemplateBinding Margin}" Uid="Border_90">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Tag" Value="{StaticResource ButtonForegroundInactiveBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Padding" Value="0,0,5,5"/>
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect BlurRadius="4" Opacity="0.8" ShadowDepth="1"/>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Border Uid="Border_54" Background="{DynamicResource ButtonBackgroundActiveBrush}">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="3"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Background" Value="{StaticResource ButtonBackgroundInactiveBrush}"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource ButtonBackgroundInactiveBrush}"/>
                                    <Setter Property="TextElement.Foreground" Value="{StaticResource ButtonForegroundInactiveBrush}"/>
                                    <Setter Property="TextElement.FontSize" Value="{StaticResource FontSize}"/>
                                    <Setter Property="Padding" Value="6,2"/>
                                </Style>
                            </Border.Style>
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content, Converter={StaticResource TimeConverterFromSeconds}}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Uid="ContentPresenter_45"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>